node('tinkerboard_linux'){  
    dir('/root/openai_jenkins_file'){
        stage(' git pull jenkins file'){
            sh "pwd"
            sh '''#!/bin/bash
                    git pull
            ''' 

        }
    }
    
    dir('/root/tengine'){
    
        stage('Git Pull'){
            sh "pwd"
            sh "hostname" 
            sh '''#!/bin/bash
                    git pull
            '''
          
        }
        stage('Make'){
        
            sh '''#!/bin/bash
                    make -j4
                    make install
            '''
          
        }
        stage('Make example'){
        
            sh '''#!/bin/bash
                mkdir -p build/examples
                rm -rf build/examples/*
                cd build/examples && cmake -DTENGINE_DIR=/root/tengine ../../examples/ && make -j4
            '''
          
        }
        stage(' Run SqueezeNet'){
        
            sh '''#!/bin/bash
                    ./build/tests/bin/bench_sqz -r1
            '''
        }
        
        stage(' Run bench_mobilenet'){
        
            sh '''#!/bin/bash
                    ./build/tests/bin/bench_mobilenet -r1
            '''
        }

    }

    dir('/root/openai_jenkins_file'){
        stage(' Run Jenkins/test'){
            sh "pwd"
            sh "hostname" 
            sh '''#!/bin/bash
                    git pull
                    pytest test.py -k "not test_eval_android" --cmdopt="onboard" --targetdir="/root/tengine" --variables=./test_var.json --html=report/test.html --junit-xml=report/test.xml --verbose || true
            ''' 
            junit allowEmptyResults: true, keepLongStdio: true, testResults: 'report/test.xml'
            publishHTML([allowMissing: true, alwaysLinkToLastBuild: true, keepAll: true, reportDir: 'report/', reportFiles: 'test.html', reportName: 'HTML Report', reportTitles: ''])
        }
    }
   

}
